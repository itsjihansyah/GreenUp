// Generated by view binder compiler. Do not edit!
package com.example.plantapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.plantapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyPlantDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView detailPlantImage;

  @NonNull
  public final FloatingActionButton fabEdit;

  @NonNull
  public final TextView health;

  @NonNull
  public final TextView healthemoji;

  @NonNull
  public final ImageView iconmoist;

  @NonNull
  public final ImageView icontemp;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView indicatorLight;

  @NonNull
  public final TextView indicatorMoist;

  @NonNull
  public final TextView indicatorTemp;

  @NonNull
  public final TextView light;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView moist;

  @NonNull
  public final Button showEdit;

  @NonNull
  public final TextView temperature;

  @NonNull
  public final TextView textMoist;

  @NonNull
  public final TextView textTemp;

  @NonNull
  public final TextView textView;

  @NonNull
  public final ToolbarBinding toolbar;

  private FragmentMyPlantDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView detailPlantImage, @NonNull FloatingActionButton fabEdit,
      @NonNull TextView health, @NonNull TextView healthemoji, @NonNull ImageView iconmoist,
      @NonNull ImageView icontemp, @NonNull ImageView imageView, @NonNull TextView indicatorLight,
      @NonNull TextView indicatorMoist, @NonNull TextView indicatorTemp, @NonNull TextView light,
      @NonNull LinearLayout linearLayout, @NonNull TextView moist, @NonNull Button showEdit,
      @NonNull TextView temperature, @NonNull TextView textMoist, @NonNull TextView textTemp,
      @NonNull TextView textView, @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.detailPlantImage = detailPlantImage;
    this.fabEdit = fabEdit;
    this.health = health;
    this.healthemoji = healthemoji;
    this.iconmoist = iconmoist;
    this.icontemp = icontemp;
    this.imageView = imageView;
    this.indicatorLight = indicatorLight;
    this.indicatorMoist = indicatorMoist;
    this.indicatorTemp = indicatorTemp;
    this.light = light;
    this.linearLayout = linearLayout;
    this.moist = moist;
    this.showEdit = showEdit;
    this.temperature = temperature;
    this.textMoist = textMoist;
    this.textTemp = textTemp;
    this.textView = textView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyPlantDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyPlantDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_plant_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyPlantDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_plant_image;
      ImageView detailPlantImage = ViewBindings.findChildViewById(rootView, id);
      if (detailPlantImage == null) {
        break missingId;
      }

      id = R.id.fab_edit;
      FloatingActionButton fabEdit = ViewBindings.findChildViewById(rootView, id);
      if (fabEdit == null) {
        break missingId;
      }

      id = R.id.health;
      TextView health = ViewBindings.findChildViewById(rootView, id);
      if (health == null) {
        break missingId;
      }

      id = R.id.healthemoji;
      TextView healthemoji = ViewBindings.findChildViewById(rootView, id);
      if (healthemoji == null) {
        break missingId;
      }

      id = R.id.iconmoist;
      ImageView iconmoist = ViewBindings.findChildViewById(rootView, id);
      if (iconmoist == null) {
        break missingId;
      }

      id = R.id.icontemp;
      ImageView icontemp = ViewBindings.findChildViewById(rootView, id);
      if (icontemp == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.indicatorLight;
      TextView indicatorLight = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLight == null) {
        break missingId;
      }

      id = R.id.indicatorMoist;
      TextView indicatorMoist = ViewBindings.findChildViewById(rootView, id);
      if (indicatorMoist == null) {
        break missingId;
      }

      id = R.id.indicatorTemp;
      TextView indicatorTemp = ViewBindings.findChildViewById(rootView, id);
      if (indicatorTemp == null) {
        break missingId;
      }

      id = R.id.light;
      TextView light = ViewBindings.findChildViewById(rootView, id);
      if (light == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.moist;
      TextView moist = ViewBindings.findChildViewById(rootView, id);
      if (moist == null) {
        break missingId;
      }

      id = R.id.show_edit;
      Button showEdit = ViewBindings.findChildViewById(rootView, id);
      if (showEdit == null) {
        break missingId;
      }

      id = R.id.temperature;
      TextView temperature = ViewBindings.findChildViewById(rootView, id);
      if (temperature == null) {
        break missingId;
      }

      id = R.id.textMoist;
      TextView textMoist = ViewBindings.findChildViewById(rootView, id);
      if (textMoist == null) {
        break missingId;
      }

      id = R.id.textTemp;
      TextView textTemp = ViewBindings.findChildViewById(rootView, id);
      if (textTemp == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new FragmentMyPlantDetailBinding((RelativeLayout) rootView, detailPlantImage, fabEdit,
          health, healthemoji, iconmoist, icontemp, imageView, indicatorLight, indicatorMoist,
          indicatorTemp, light, linearLayout, moist, showEdit, temperature, textMoist, textTemp,
          textView, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
